1
00:00:00,230 --> 00:00:05,490
So here now is the, current concept definition of arch that the AI program has.

2
00:00:05,490 --> 00:00:09,270
Now, the teacher shows a new example, here is the new example shown. There

3
00:00:09,270 --> 00:00:13,760
are three bricks, but the third brick here, is not on top of the first two.

4
00:00:13,760 --> 00:00:18,410
This is the input to the AI program with a third example. And the teacher tells,

5
00:00:18,410 --> 00:00:23,180
the AI program that this is not a positive example of an arch. So here is

6
00:00:23,180 --> 00:00:27,940
a current concept definition. Here is a representation of the input example, and

7
00:00:27,940 --> 00:00:30,890
information that this is a negative instance of the example.

8
00:00:30,890 --> 00:00:33,000
What may the AI program learn from it?

9
00:00:33,000 --> 00:00:38,710
The AI program must refine it's current definition of the arch, in such a way

10
00:00:38,710 --> 00:00:43,820
that the, new negative example is ruled out. But how can we do that? One way

11
00:00:43,820 --> 00:00:48,420
of doing that is to say, that, we will put extra conditions on these links.

12
00:00:48,420 --> 00:00:53,319
These support links must be there. These are not optional. We'll call it,

13
00:00:53,319 --> 00:00:57,320
the require-link heuristic. This require-link heuristic says that,

14
00:00:58,350 --> 00:01:02,580
if the structure of the presentation of the concept and is structure of

15
00:01:02,580 --> 00:01:06,400
the representation of the, negative example have some things in common.

16
00:01:06,400 --> 00:01:11,630
But there are also some differences. Then revise the current definition, in

17
00:01:11,630 --> 00:01:17,200
such a way that, those things that are not in common become, must be required.
